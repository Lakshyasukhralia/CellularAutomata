#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Apr 01, 2018 09:54:43 PM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import CA_enc_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Cellular_Automata_Encryption_System (root)
    CA_enc_support.init(root, top)
    root.mainloop()

w = None
def create_Cellular_Automata_Encryption_System(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Cellular_Automata_Encryption_System (w)
    CA_enc_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Cellular_Automata_Encryption_System():
    global w
    w.destroy()
    w = None


class Cellular_Automata_Encryption_System:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font11 = "-family {@Malgun Gothic} -size 11 -weight normal "  \
            "-slant roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1024x768+515+26")
        top.title("Cellular Automata Encryption System")
        top.configure(background="#f08e98")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.style.map('TRadiobutton',background=
            [('selected', _bgcolor), ('active',"_ana2color")])
        self.TRadiobutton1 = ttk.Radiobutton(top)
        self.TRadiobutton1.place(relx=0.14, rely=0.53, relwidth=0.1
                , relheight=0.0, height=25)
        self.TRadiobutton1.configure(takefocus="")
        self.TRadiobutton1.configure(text='''RGB''')
        self.TRadiobutton1.configure(width=54)

        self.TRadiobutton2 = ttk.Radiobutton(top)
        self.TRadiobutton2.place(relx=0.14, rely=0.61, relwidth=0.1
                , relheight=0.0, height=25)
        self.TRadiobutton2.configure(takefocus="")
        self.TRadiobutton2.configure(text='''Gray''')

        self.TRadiobutton3 = ttk.Radiobutton(top)
        self.TRadiobutton3.place(relx=0.47, rely=0.53, relwidth=0.1
                , relheight=0.0, height=25)
        self.TRadiobutton3.configure(takefocus="")
        self.TRadiobutton3.configure(text='''Key''')

        self.TRadiobutton4 = ttk.Radiobutton(top)
        self.TRadiobutton4.place(relx=0.47, rely=0.61, relwidth=0.1
                , relheight=0.0, height=25)
        self.TRadiobutton4.configure(takefocus="")
        self.TRadiobutton4.configure(text='''Preset''')

        self.TRadiobutton5 = ttk.Radiobutton(top)
        self.TRadiobutton5.place(relx=0.78, rely=0.53, relwidth=0.1
                , relheight=0.0, height=25)
        self.TRadiobutton5.configure(takefocus="")
        self.TRadiobutton5.configure(text='''Histogram''')

        self.TRadiobutton6 = ttk.Radiobutton(top)
        self.TRadiobutton6.place(relx=0.78, rely=0.61, relwidth=0.1
                , relheight=0.0, height=25)
        self.TRadiobutton6.configure(takefocus="")
        self.TRadiobutton6.configure(text='''Correlation''')

        self.Canvas1 = Canvas(top)
        self.Canvas1.place(relx=0.06, rely=0.05, relheight=0.31, relwidth=0.25)
        self.Canvas1.configure(background="#ffffff")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#f0f0f0f0f0f0")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="#000000")
        self.Canvas1.configure(relief=RIDGE)
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=261)

        self.Canvas3 = Canvas(top)
        self.Canvas3.place(relx=0.38, rely=0.05, relheight=0.31, relwidth=0.25)
        self.Canvas3.configure(background="white")
        self.Canvas3.configure(borderwidth="2")
        self.Canvas3.configure(highlightbackground="#d9d9d9")
        self.Canvas3.configure(highlightcolor="black")
        self.Canvas3.configure(insertbackground="black")
        self.Canvas3.configure(relief=RIDGE)
        self.Canvas3.configure(selectbackground="#c4c4c4")
        self.Canvas3.configure(selectforeground="black")
        self.Canvas3.configure(width=261)

        self.Canvas4 = Canvas(top)
        self.Canvas4.place(relx=0.69, rely=0.05, relheight=0.31, relwidth=0.25)
        self.Canvas4.configure(background="white")
        self.Canvas4.configure(borderwidth="2")
        self.Canvas4.configure(highlightbackground="#d9d9d9")
        self.Canvas4.configure(highlightcolor="black")
        self.Canvas4.configure(insertbackground="black")
        self.Canvas4.configure(relief=RIDGE)
        self.Canvas4.configure(selectbackground="#c4c4c4")
        self.Canvas4.configure(selectforeground="black")
        self.Canvas4.configure(width=261)

        self.TProgressbar1 = ttk.Progressbar(top)
        self.TProgressbar1.place(relx=0.1, rely=0.82, relwidth=0.84
                , relheight=0.0, height=40)

        self.Label1 = Label(top)
        self.Label1.place(relx=0.06, rely=0.42, height=46, width=256)
        self.Label1.configure(background="#ff0000")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font11)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Encryption''')
        self.Label1.configure(width=256)

        self.Label2 = Label(top)
        self.Label2.place(relx=0.39, rely=0.42, height=46, width=246)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#80ff80")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font11)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Decryption''')
        self.Label2.configure(width=246)

        self.Label3 = Label(top)
        self.Label3.place(relx=0.7, rely=0.42, height=46, width=246)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#80ffff")
        self.Label3.configure(disabledforeground="#ffffff")
        self.Label3.configure(font=font11)
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Results''')
        self.Label3.configure(width=246)






if __name__ == '__main__':
    vp_start_gui()



