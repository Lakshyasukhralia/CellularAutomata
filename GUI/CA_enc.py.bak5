#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Mar 31, 2018 07:02:19 PM
import sys
import os
import subprocess

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import CA_enc_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Cellular_Automata_Encryption_System (root)
    CA_enc_support.init(root, top)
    root.mainloop()

w = None
def create_Cellular_Automata_Encryption_System(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Cellular_Automata_Encryption_System (w)
    CA_enc_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Cellular_Automata_Encryption_System():
    global w
    w.destroy()
    w = None


class Cellular_Automata_Encryption_System:

    def Encrypt_Gray(self):
        #os.startfile('D:\\Cellular Automata Stuff\\CellularAutomata')
        os.chdir('D:\\Cellular Automata Stuff\\CellularAutomata')
        os.system('python Image_IP.py')

    def Decrypt(self):
        os.chdir('D:\\Cellular Automata Stuff\\CellularAutomata')
        os.system('python Decrypt.py')

    def Res_Hist(self):
        os.chdir('D:\\Cellular Automata Stuff\\CellularAutomata')
        os.system('python Hist.py')

    def Res_Corr(self):
        os.startfile('D:\\Cellular Automata Stuff\\CellularAutomata\\Result\\Correlation')

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1024x768+515+26")
        top.title("Cellular Automata Encryption System")
        top.configure(background="#f08e98")



        self.Button1 = Button(top)
        self.Button1.place(relx=0.1, rely=0.42, height=53, width=186)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Encrypt''')
        self.Button1.configure(width=186)
        self.Button1.configure(command= self.Encrypt_Gray)

        self.Button2 = Button(top)
        self.Button2.place(relx=0.42, rely=0.42, height=53, width=186)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Decrypt''')
        self.Button2.configure(width=186)

        self.Button3 = Button(top)
        self.Button3.place(relx=0.73, rely=0.42, height=53, width=186)
        self.Button3.configure(activebackground="#d9d9d9")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Results''')
        self.Button3.configure(width=186)
        self.Button3.configure(command= self.Res_Corr)

        self.style.map('TRadiobutton',background=
            [('selected', _bgcolor), ('active',"_ana2color")])
        self.TRadiobutton1 = ttk.Radiobutton(top)
        self.TRadiobutton1.place(relx=0.15, rely=0.53, relwidth=0.05
                , relheight=0.0, height=26)
        self.TRadiobutton1.configure(takefocus="")
        self.TRadiobutton1.configure(text='''RGB''')

        self.TRadiobutton2 = ttk.Radiobutton(top)
        self.TRadiobutton2.place(relx=0.15, rely=0.61, relwidth=0.05
                , relheight=0.0, height=26)
        self.TRadiobutton2.configure(takefocus="")
        self.TRadiobutton2.configure(text='''Gray''')

        self.TRadiobutton3 = ttk.Radiobutton(top)
        self.TRadiobutton3.place(relx=0.48, rely=0.53, relwidth=0.07
                , relheight=0.0, height=26)
        self.TRadiobutton3.configure(takefocus="")
        self.TRadiobutton3.configure(text='''Key''')

        self.TRadiobutton4 = ttk.Radiobutton(top)
        self.TRadiobutton4.place(relx=0.48, rely=0.61, relwidth=0.07
                , relheight=0.0, height=26)
        self.TRadiobutton4.configure(takefocus="")
        self.TRadiobutton4.configure(text='''Preset''')

        self.TRadiobutton5 = ttk.Radiobutton(top)
        self.TRadiobutton5.place(relx=0.77, rely=0.53, relwidth=0.11
                , relheight=0.0, height=26)
        self.TRadiobutton5.configure(takefocus="")
        self.TRadiobutton5.configure(text='''Histogram''')
        self.TRadiobutton5.configure(width=110)
        self.TRadiobutton5.configure(command=self.Res_Hist)

        self.TRadiobutton6 = ttk.Radiobutton(top)
        self.TRadiobutton6.place(relx=0.77, rely=0.61, relwidth=0.11
                , relheight=0.0, height=26)
        self.TRadiobutton6.configure(takefocus="")
        self.TRadiobutton6.configure(text='''Correlation''')
        self.TRadiobutton6.configure(command= self.Res_Corr)
        self.TRadiobutton6.configure(width=110)

        self.Canvas1 = Canvas(top)
        self.Canvas1.place(relx=0.06, rely=0.05, relheight=0.31, relwidth=0.25)
        self.Canvas1.configure(background="white")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief=RIDGE)
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=261)

        self.Canvas3 = Canvas(top)
        self.Canvas3.place(relx=0.38, rely=0.05, relheight=0.31, relwidth=0.25)
        self.Canvas3.configure(background="white")
        self.Canvas3.configure(borderwidth="2")
        self.Canvas3.configure(highlightbackground="#d9d9d9")
        self.Canvas3.configure(highlightcolor="black")
        self.Canvas3.configure(insertbackground="black")
        self.Canvas3.configure(relief=RIDGE)
        self.Canvas3.configure(selectbackground="#c4c4c4")
        self.Canvas3.configure(selectforeground="black")
        self.Canvas3.configure(width=261)

        self.Canvas4 = Canvas(top)
        self.Canvas4.place(relx=0.69, rely=0.05, relheight=0.31, relwidth=0.25)
        self.Canvas4.configure(background="white")
        self.Canvas4.configure(borderwidth="2")
        self.Canvas4.configure(highlightbackground="#d9d9d9")
        self.Canvas4.configure(highlightcolor="black")
        self.Canvas4.configure(insertbackground="black")
        self.Canvas4.configure(relief=RIDGE)
        self.Canvas4.configure(selectbackground="#c4c4c4")
        self.Canvas4.configure(selectforeground="black")
        self.Canvas4.configure(width=261)

        self.TProgressbar1 = ttk.Progressbar(top)
        self.TProgressbar1.place(relx=0.1, rely=0.82, relwidth=0.84
                , relheight=0.0, height=40)
        self.TProgressbar1.configure(length="860")






if __name__ == '__main__':
    vp_start_gui()
